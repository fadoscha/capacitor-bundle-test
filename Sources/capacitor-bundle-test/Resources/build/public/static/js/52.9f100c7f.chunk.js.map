{"version":3,"sources":["../../../src/web.ts"],"names":[],"mappings":"yPAUa,EAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACF,kBAAmB,EADrB,EAAE,uBAAE,IAAJ,SAAI,MAAJ,uCAGE,WAAa,GAAb,uEACQ,EAAU,KAAK,iBAAwB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,OAC/C,KAAK,mBAAmB,GAF1B,gDAHF,wDAAI,IAAJ,eAAI,MAAJ,uCAQE,WAAmB,GAAnB,uEACQ,EAAU,KAAK,uBAA8B,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,MACrD,KAAK,mBAAmB,GAF1B,gDARF,wDAAI,IAAJ,UAAI,MAAJ,uCAaE,WAAc,GAAd,uEACQ,GAAkB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,WAAY,IACtC,KAAK,mBAAmB,CAAC,IAF3B,gDAbF,wDAAI,IAAJ,iBAAI,MAAJ,uCAkBE,8EACE,KAAK,kBAAmB,EAD1B,gDAlBF,uDAAI,IAAJ,mBAAI,MAAJ,uCAsBE,aAAQ,OAAR,sBAAU,OAAV,6BACM,KAAK,kBACP,KAAK,mBAAmB,CAAC,KAF7B,gDAtBF,uDAAI,IAAJ,eAAI,MAAJ,uCA4BE,8EACE,KAAK,kBAAmB,EAD1B,gDA5BF,uDAAI,IAAJ,mBAAI,MAgCM,WAAuD,IAAtC,EAAsC,uDAAjB,IAAY,MACxD,OAAI,IAAU,IAAY,OACjB,CAAC,IACC,IAAU,IAAY,MACxB,CAAC,IAEH,CAAC,MAtCZ,CAAI,IAAJ,yBAAI,MAyCM,WAC2C,IAAjD,EAAiD,uDAAxB,IAAiB,QAE1C,OAAI,IAAS,IAAiB,QACrB,CAAC,GAAI,GAAI,GAAI,GAAI,IACf,IAAS,IAAiB,MAC5B,CAAC,GAAI,GAAI,IAEX,CAAC,GAAI,GAAI,MAjDpB,CAAI,IAAJ,qBAAI,MAoDM,SAAmB,GACzB,IAAI,UAAU,QAGZ,MAAM,KAAK,YAAY,4CAFvB,UAAU,QAAQ,OAtDxB,GAAgC","file":"static/js/52.9f100c7f.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { ImpactStyle, NotificationType } from './definitions';\nexport class HapticsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.selectionStarted = false;\n    }\n    async impact(options) {\n        const pattern = this.patternForImpact(options === null || options === void 0 ? void 0 : options.style);\n        this.vibrateWithPattern(pattern);\n    }\n    async notification(options) {\n        const pattern = this.patternForNotification(options === null || options === void 0 ? void 0 : options.type);\n        this.vibrateWithPattern(pattern);\n    }\n    async vibrate(options) {\n        const duration = (options === null || options === void 0 ? void 0 : options.duration) || 300;\n        this.vibrateWithPattern([duration]);\n    }\n    async selectionStart() {\n        this.selectionStarted = true;\n    }\n    async selectionChanged() {\n        if (this.selectionStarted) {\n            this.vibrateWithPattern([70]);\n        }\n    }\n    async selectionEnd() {\n        this.selectionStarted = false;\n    }\n    patternForImpact(style = ImpactStyle.Heavy) {\n        if (style === ImpactStyle.Medium) {\n            return [43];\n        }\n        else if (style === ImpactStyle.Light) {\n            return [20];\n        }\n        return [61];\n    }\n    patternForNotification(type = NotificationType.Success) {\n        if (type === NotificationType.Warning) {\n            return [30, 40, 30, 50, 60];\n        }\n        else if (type === NotificationType.Error) {\n            return [27, 45, 50];\n        }\n        return [35, 65, 21];\n    }\n    vibrateWithPattern(pattern) {\n        if (navigator.vibrate) {\n            navigator.vibrate(pattern);\n        }\n        else {\n            throw this.unavailable('Browser does not support the vibrate API');\n        }\n    }\n}\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}